---

- name: Fetch bash-it repository
  git:
    repo: "{{ repository }}"
    dest: "{{ dotfiles_user_home }}/.bash-it"
    version: "{{ version }}"

- name: Install bash-it
  command: "{{ dotfiles_user_home }}/.bash-it/install.sh --silent"

# - name: install bash-it on .bashrc for {{ user }}
#   lineinfile:
#     dest: "{{ dotfiles_user_home }}/.bashrc"
#     create: yes
#     owner: "{{ user }}"
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#   with_items:
#     - { regexp: '^export BASH_IT=', line: 'export BASH_IT="$HOME/.bash-it"' }
#     - { regexp: '^export BASH_IT_THEME=', line: 'export BASH_IT_THEME={{ theme }}' }
#     - { regexp: '^source \$BASH_IT', line: 'source $BASH_IT/bash_it.sh' }

- name: .bash_profile loads .bashrc
  blockinfile:
    dest: "{{ dotfiles_user_home }}/.bash_profile"
    create: yes
    block: |
      stty -ctlecho

      if [ -f /etc/bashrc ]; then
        source /etc/bashrc
      fi

      if [ -f ~/.bashrc ]; then
        source ~/.bashrc
      fi

- name: add BASH_IT_CUSTOM variable to .bashrc
  blockinfile:
    dest: "{{ dotfiles_user_home }}/.bashrc"
    insertafter: '.*export BASH_IT_RELOAD_LEGACY='
    regexp:      '^export BASH_IT_CUSTOM='
    block: |
      export BASH_IT_CUSTOM={{ dotfiles_home }}
      shopt -s globstar

- name: install bash_it plugins
  command: "/bin/bash -i -l -c \"bash-it enable plugin {{ plugins|join(' ') }}\""
  when: plugins is defined
  register: plugins_result
  changed_when: "plugins_result.stdout_lines | reject('match', '.* is already enabled.') | list | length > 0"

- name: install bash_it aliases
  command: "/bin/bash -i -l -c \"bash-it enable alias {{ aliases|join(' ') }}\""
  when: aliases is defined
  register: aliases_result
  changed_when: "aliases_result.stdout_lines | reject('match', '.* is already enabled.') | list | length > 0"

- name: install bash_it completions
  command: "/bin/bash -i -l -c \"bash-it enable completion {{ completions|join(' ') }}\""
  when: completions is defined
  register: completions_result
  changed_when: "completions_result.stdout_lines | reject('match', '.* is already enabled.') | list | length > 0"



  # - name: Install fzf
  #   pacman:
  #     name: fzf
  #     state: latest
  #   become: true
  # - name: Copy the fzf bash file
  #   copy:
  #     src: "{{playbook_dir}}/resources/.fzf.bash"
  #     dest: /home/{{ansible_user_id}}/.fzf.bash
  # - name: Enable fzf for bashit
  #   command: bash-it search fzf --enable
  # - name: Install autojump
  #   pacman:
  #     name: autojump
  #     state: latest
  #   become: true
  # - name: Enable autojump for bashit
  #   command: bash-it search autojump --enable






