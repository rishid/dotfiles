---

- name: install tmux
  package:
   name: tmux
   state: present
  tags: bootstrap
  become: true

- name: ensure extra tmux directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.tmux"
    owner: "{{ whoami }}"
    group: "{{ whoami_group }}"
    mode: 0755
    state: directory

- name: Install reattach-to-user-namespace
  homebrew:
    name: reattach-to-user-namespace
    state: present
  when: ansible_os_family == "Darwin"

- name: Install oh-my-tmux (gpakosz/.tmux)
  git:
    repo: https://github.com/gpakosz/.tmux
    dest: "{{ dotfiles_user_home }}/.tmux"
    depth: 1

- name: Install tpm
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ dotfiles_user_home }}/.tmux/plugins/tpm"
    depth: 1

- name: Symlink tmux.conf
  ansible.builtin.file: 
    src: "{{ playbook_dir }}/roles/tmux/files/tmux.conf"
    dest: "{{ dotfiles_user_home }}/.tmux.conf"
    state: link

- name: Copy local configuration
  copy:
    src: "{{ dotfiles_user_home }}/.tmux/.tmux.conf.local"
    dest: "{{ dotfiles_user_home }}/.tmux.conf.local"

- name: Add my customizations
  lineinfile:
    path: "{{ dotfiles_user_home }}/.tmux.conf.local"
    insertafter: '^# this is the place to override or undo settings'
    line: "{{ item.line }}"
  with_items:
    - { line: '' }
    - { line: '' }
    - { line: 'bind L switch-client -l' }
    - { line: '# Switch to last session' }
    - { line: '' }
    - { line: "bind-key -T copy-mode M-w send-keys -X copy-pipe 'reattach-to-user-namespace pbcopy'" }
    - { line: "# Copy to clipboard" }
    - { line: '' }

- name: Increase history limit
  lineinfile:
    path: "{{ dotfiles_user_home }}/.tmux.conf.local"
    regexp: "^#set -g history-limit.*"
    line: "set -g history-limit 100000"

- name: Set left status bar
  lineinfile:
    path: "{{ dotfiles_user_home }}/.tmux.conf.local"
    regexp: "^tmux_conf_theme_status_left=.*"
    line: "tmux_conf_theme_status_left=' ‚ùê #S '"

- name: Configure plugins
  blockinfile:
    path: "{{ dotfiles_user_home }}/.tmux.conf.local"
    insertafter: EOF
    block: |

      # plugins
      set -g @tpm_plugins '            \
        tmux-plugins/tpm               \
        tmux-plugins/tmux-sensible     \
        tmux-plugins/tmux-resurrect    \
        tmux-plugins/tmux-continuum    \
        jbnicolai/tmux-fpp             \
        tmux-plugins/tmux-pain-control \
      '

      set -g @resurrect-processes '"emacs -nw"'
      # enable continuum
      set -g @continuum-restore 'on'
      set -g @continuum-boot-options 'iterm,fullscreen'
      set -g @continuum-save-interval '5'
      set -g @resurrect-capture-pane-contents 'on'

      # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
      run '~/.tmux/plugins/tpm/tpm'


#- name: Symlink .tmux.conf
#  file:
#    src: "{{ dotfiles_home }}/roles/tmux/files/tmux.conf"
#    dest: "{{dotfiles_user_home}}/.tmux.conf"
#    state: link
#  when: ansible_os_family != "Darwin"

# On macOS, use the same tmux.conf, but also use
# reattach_to_user_namespace (for clipboard support)
#- name: Symlink .tmux.conf (macOS)
#  file:
#    src: "{{ dotfiles_home }}/roles/tmux/files/tmux-mac.conf"
#    dest: "{{dotfiles_user_home}}/.tmux.conf"
#    state: link
#  when: ansible_os_family == "Darwin"

- name: Check whether tmux is running
  command: pgrep tmux
  ignore_errors: yes
  changed_when: False
  register: tmux_status

- name: Reload tmux environment so tpm is sourced
  shell: tmux source ~/.tmux.conf
  when: tmux_status.rc == 0
