
- import_tasks: mac.yml
  when: ansible_os_family == "Darwin"
- import_tasks: debian.yml
  when: ansible_os_family == "Debian"

- name: Configure oh-my-tmux
  git:
    repo: 'https://github.com/gpakosz/.tmux.git'
    dest: "{{ dotfiles_user_home }}/.tmux"

- name: Install tpm
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{dotfiles_user_home}}/.tmux/plugins/tpm"

- name: Symlink tmux.conf
  file:
    src: "{{ ansible_env.HOME }}/.tmux/.tmux.conf"
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    state: link

- name: Copy local configuration
  copy:
    src: "{{ ansible_env.HOME }}/.tmux/.tmux.conf.local"
    dest: "{{ ansible_env.HOME }}/.tmux.conf.local"

#- name: Symlink .tmux.conf
#  file:
#    src: "{{ dotfiles_home }}/roles/tmux/files/tmux.conf"
#    dest: "{{dotfiles_user_home}}/.tmux.conf"
#    state: link
#  when: ansible_os_family != "Darwin"

# On macOS, use the same tmux.conf, but also use
# reattach_to_user_namespace (for clipboard support)
#- name: Symlink .tmux.conf (macOS)
#  file:
#    src: "{{ dotfiles_home }}/roles/tmux/files/tmux-mac.conf"
#    dest: "{{dotfiles_user_home}}/.tmux.conf"
#    state: link
#  when: ansible_os_family == "Darwin"

- name: Check whether tmux is running
  shell: ps aux | grep tmux | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: tmux_status

- name: Reload tmux environment so tpm is sourced
  shell: tmux source ~/.tmux.conf
  when: tmux_status.rc == 0
